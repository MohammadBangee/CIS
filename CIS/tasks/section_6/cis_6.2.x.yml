---

- name: "6.2.1 | PATCH | Ensure password fields are not empty"
  command: passwd -l {{ item }}
  changed_when: false
  failed_when: false
  with_items: "{{ empty_password_accounts.stdout_lines }}"
  when:
      - empty_password_accounts.rc
      - rule_6_2_1
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - accounts
      - rule_6.2.1

- name: "6.2.2 | PATCH | Ensure no legacy '+'' entries exist in /etc/passwd"
  block:
      - name: "6.2.2 | AUDIT | Ensure no legacy '+''entries exist in /etc/passwd"
        shell: grep '^+:' /etc/passwd
        changed_when: false
        failed_when: false
        register: cis_6_2_2_audit

      - name: "6.2.2 | AUDIT | Ensure no legacy ''''entries exist in /etc/passwd | Alert when no entries found"
        debug:
            msg: "Good news! We have not found any legacy ''''entries in /etc/passwd"
        failed_when: false
        changed_when: false
        when:
            - cis_6_2_2_audit.stdout is not defined

      - name: "6.2.2 | PATCH | Ensure no legacy ''''entries exist in /etc/passwd | Alert when entries found"
        debug:
            msg: "We have found legacy ''''entries in /etc/passwd; Please remove these entries manually"
        when:
            - cis_6_2_2_audit.stdout is defined
  when:
      - rule_6_2_2
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_6.2.2

- name: "6.2.4 | PATCH | Ensure no legacy '+' entries exist in /etc/shadow"
  block:
      - name: "6.2.4 | AUDIT | Ensure no legacy '+' entries exist in /etc/shadow"
        shell: grep '^+:' /etc/shadow
        changed_when: false
        failed_when: false
        register: cis_6_2_4_audit

      - name: "6.2.4 | AUDIT | Ensure no legacy '+' entries exist in /etc/shadow | Alert when no entries found"
        debug:
            msg: "Good news! We have not found any legacy '+' entries in /etc/shadow"
        failed_when: false
        changed_when: false
        when:
            - cis_6_2_4_audit.stdout is not defined

      - name: "6.2.4 | PATCH | Ensure no legacy '+' entries exist in /etc/shadow | Alert when no entries found"
        debug:
            msg: "We have found legacy '+' entries in /etc/shadow; Please remove these entries manually"
        when:
            - cis_6_2_4_audit.stdout is defined
  when:
      - rule_6_2_4
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_6.2.4

- name: "6.2.5 | PATCH | Ensure no legacy '+' entries exist in /etc/group"
  block:
      - name: "6.2.5 | AUDIT | Ensure no legacy '+' entries exist in /etc/group"
        shell: grep '^+:' /etc/group
        changed_when: false
        failed_when: false
        register: cis_6_2_5_audit

      - name: "6.2.5 | AUDIT | Ensure no legacy '+' entries exist in /etc/group | Alert when no entries found"
        debug:
            msg: "Good news! We have not found any legacy '+' entries in /etc/group"
        failed_when: false
        changed_when: false
        when:
            - cis_6_2_5_audit.stdout is not defined

      - name: "6.2.5 | PATCH | Ensure no legacy '+' entries exist in /etc/group | Alert when entries found"
        debug:
            msg: "We have found legacy '+' entries in /etc/group; Please remove these entries manually"
        when:
            - cis_6_2_5_audit.stdout is defined
  when:
      - rule_6_2_5
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_6.2.5

- name: "6.2.6 | PATCH | Ensure root is the only UID 0 account"
  command: passwd -l {{ item }}
  changed_when: false
  failed_when: false
  with_items: "{{ uid_zero_accounts_except_root.stdout_lines }}"
  when:
      - uid_zero_accounts_except_root.rc
      - rule_6_2_6
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - accounts
      - users
      - rule_6.2.6

- name: "6.2.7 | PATCH | Ensure users' home directories permissions are 750 or more restrictive"
  block:
      - name: "6.2.7 | AUDIT | Ensure users' home directories permissions are 750 or more restrictive"
        stat:
            path: "{{ item }}"
        with_items: "{{ passwd | selectattr('uid', '>=', rhel8uid_interactive_uid_start | int) | selectattr('uid', '<=', rhel8uid_interactive_uid_stop | int) | map(attribute='dir') | list }}"
        register: cis_6_2_7_audit

      - name: "6.2.7 | AUDIT | Ensure users' home directories permissions are 750 or more restrictive"
        command: find -H {{ item.0 | quote }} -not -type l -perm /027
        check_mode: false
        changed_when: cis_6_2_7_patch_audit.stdout | length > 0
        register: cis_6_2_7_patch_audit
        when:
            - ansible_check_mode
            - item.1.exists
        with_together:
            - "{{ cis_6_2_7_audit.results | map(attribute='item') | list }}"
            - "{{ cis_6_2_7_audit.results | map(attribute='stat') | list }}"
        loop_control:
            label: "{{ item.0 }}"

      - name: "6.2.7 | PATCH | Ensure users' home directories permissions are 750 or more restrictive"
        file:
            path: "{{ item.0 }}"
            recurse: true
            mode: a-st,g-w,o-rwx
        register: cis_6_2_7_patch
        when:
            - not ansible_check_mode
            - item.1.exists
        with_together:
            - "{{ cis_6_2_7_audit.results | map(attribute='item') | list }}"
            - "{{ cis_6_2_7_audit.results | map(attribute='stat') | list }}"
        loop_control:
            label: "{{ item.0 }}"

      - name: "6.2.7 | PATCH | Ensure users' home directories permissions are 750 or more restrictive"
        acl:
            path: "{{ item.0 }}"
            default: true
            state: present
            recursive: true
            etype: "{{ item.1.etype }}"
            permissions: "{{ item.1.mode }}"
        when:
            - not system_is_container
        with_nested:
            - "{{ (ansible_check_mode | ternary(cis_6_2_7_patch_audit, cis_6_2_7_patch)).results |
              rejectattr('skipped', 'defined') | map(attribute='item') | map('first') | list }}"
            -
                - etype: group
                  mode: rx
                - etype: other
                  mode: '0'
  when:
      - rule_6_2_7
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - users
      - permissions
      - rule_6.2.7

- name: "6.2.8 | PATCH | Ensure users own their home directories"
  file:
      path: "{{ item.dir }}"
      owner: "{{ item.id }}"
      state: directory
  with_items: "{{ passwd }}"
  loop_control:
      label: "{{ passwd_label }}"
  when:
      - item.uid >= rhel8uid_interactive_uid_start|int
      - item.id != 'nobody'
      - item.dir != '/dev/null'
      - rule_6_2_8
  tags:
      - skip_ansible_lint  # settings found on 6_2_7
      - level1-server
      - level1-workstation
      - automated
      - patch
      - users
      - rule_6.2.8

- name: "6.2.9 | PATCH | Ensure users' dot files are not group or world-writable"
  block:
      - name: "6.2.9 | AUDIT | Ensure users' dot files are not group or world-writable | Check for files"
        shell: find /home/ -maxdepth 2 -name "\.*" -perm /g+w,o+w
        changed_when: false
        failed_when: false
        register: cis_6_2_9_audit

      - name: "6.2.9 | PATCH | Ensure users' dot files are not group or world-writable | Changes files if configured"
        file:
            path: '{{ item }}'
            mode: go-w
        with_items: "{{ cis_6_2_9_audit.stdout_lines }}"
        when:
            - cis_6_2_9_audit.stdout is defined
            - dotperm_ansiblemanaged
  when:
      - rule_6_2_9
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - users
      - permissions
      - rule_6.2.9

- name: "6.2.10 | PATCH | Ensure no users have .forward files"
  file:
      path: "~{{ item }}/.forward"
      state: absent
  with_items:
      - "{{ users.stdout_lines }}"
  when:
      - rule_6_2_10
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - users
      - files
      - rule_6.2.10

- name: "6.2.11 | PATCH | Ensure no users have .netrc files"
  file:
      path: "~{{ item }}/.netrc"
      state: absent
  with_items:
      - "{{ users.stdout_lines }}"
  when:
      - rule_6_2_11
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - users
      - files
      - rule_6.2.11

- name: "6.2.12 | PATCH | Ensure users' .netrc Files are not group or world accessible"
  command: /bin/true
  changed_when: false
  failed_when: false
  when:
      - rule_6_2_12
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - users
      - permissions
      - notimplemented
      - rule_6.2.12

- name: "6.2.13 | PATCH | Ensure no users have .rhosts files"
  file:
      path: "~{{ item }}/.rhosts"
      state: absent
  with_items: "{{ users.stdout_lines }}"
  when:
      - rule_6_2_13
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - users
      - files
      - rule_6.2.13

- name: "6.2.14 | AUDIT | Ensure all groups in /etc/passwd exist in /etc/group"
  block:
      - name: "6.2.14 | AUDIT | Ensure all groups in /etc/passwd exist in /etc/group | Check /etc/passwd entries"
        shell: pwck -r | grep 'no group' | awk '{ gsub("[:\47]",""); print $2}'
        changed_when: false
        failed_when: false
        check_mode: false
        register: cis_6_2_14_passwd_gid_check

      - name: "6.2.14 | AUDIT | Ensure all groups in /etc/passwd exist in /etc/group | Print warning about users with invalid GIDs missing GID entries in /etc/group"
        debug:
            msg: "Warning!! The following users have non-existent GIDs (Groups): {{ cis_6_2_14_passwd_gid_check.stdout_lines | join (', ') }}"
        when: cis_6_2_14_passwd_gid_check.stdout | length > 0

      - name: "6.2.14 | AUDIT | Ensure all groups in /etc/passwd exist in /etc/group | Warn Count"
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: '6.2.14'
        when: cis_6_2_14_passwd_gid_check.stdout | length > 0
  when:
      - rule_6_2_14
  tags:
      - level1-server
      - level1-workstation
      - automated
      - audit
      - accounts
      - groups
      - rule_6.2.14

- name: "6.2.15 | AUDIT Ensure no duplicate UIDs exist"
  block:
      - name: "6.2.15 | AUDIT | Ensure no duplicate UIDs exist | Check for duplicate UIDs"
        shell: "pwck -r | awk -F: '{if ($3 in uid) print $1 ; else uid[$3]}' /etc/passwd"
        changed_when: false
        failed_when: false
        register: cis_6_2_15_user_uid_check

      - name: "6.2.15 | AUDIT | Ensure no duplicate UIDs exist | Print warning about users with duplicate UIDs"
        debug:
            msg: "Warning!! The following users have UIDs that are duplicates: {{ cis_6_2_15_user_uid_check.stdout_lines }}"
        when: cis_6_2_15_user_uid_check.stdout | length > 0

      - name: "6.2.15 | AUDIT | Ensure no duplicate UIDs exist | Warn Count"
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: '6.2.15'
        when: cis_6_2_15_user_uid_check.stdout | length > 0
  when:
      - rule_6_2_15
  tags:
      - level1-server
      - level1-workstation
      - automated
      - audit
      - accounts
      - users
      - rule_6.2.15

- name: "6.2.16 | AUDIT | Ensure no duplicate GIDs exist"
  block:
      - name: "6.2.16 | AUDIT | Ensure no duplicate GIDs exist | Check for duplicate GIDs"
        shell: "pwck -r | awk -F: '{if ($3 in users) print $1 ; else users[$3]}' /etc/group"
        changed_when: false
        failed_when: false
        register: cis_6_2_16_user_user_check

      - name: "6.2.16 | AUDIT | Ensure no duplicate GIDs exist | Print warning about users with duplicate GIDs"
        debug:
            msg: "Warning!! The following groups have duplicate GIDs: {{ cis_6_2_16_user_user_check.stdout_lines }}"
        when: cis_6_2_16_user_user_check.stdout | length > 0

      - name: "6.2.16 | AUDIT | Ensure no duplicate GIDs exist | Warn Count"
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: '6.2.16'
        when: cis_6_2_16_user_user_check.stdout | length > 0

  when:
      - rule_6_2_16
  tags:
      - level1-server
      - level1-workstation
      - automated
      - audit
      - accounts
      - groups
      - rule_6.2.16

- name: "6.2.17 | AUDIT | Ensure no duplicate user names exist"
  block:
      - name: "6.2.17 | AUDIT | Ensure no duplicate user names exist | Check for duplicate User Names"
        shell: "pwck -r | awk -F: '{if ($1 in users) print $1 ; else users[$1]}' /etc/passwd"
        changed_when: false
        failed_when: false
        register: cis_6_2_17_user_username_check

      - name: "6.2.17 | AUDIT | Ensure no duplicate user names exist | Print warning about users with duplicate User Names"
        debug:
            msg: "Warning!! The following user names are duplicates: {{ cis_6_2_17_user_username_check.stdout_lines }}"
        when: cis_6_2_17_user_username_check.stdout | length > 0

      - name: "6.2.17 | AUDIT | Ensure no duplicate user names exist | Warn Count"
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: '6.2.17'
        when: cis_6_2_17_user_username_check.stdout | length > 0
  when:
      - rule_6_2_17
  tags:
      - level1-server
      - level1-workstation
      - automated
      - audit
      - accounts
      - users
      - rule_6.2.17

- name: "6.2.18 | AUDIT |Ensure no duplicate group names exist"
  block:
      - name: "6.2.18 | AUDIT | Ensure no duplicate group names exist | Check for duplicate group names"
        shell: 'getent passwd | cut -d: -f1 | sort -n | uniq -d'
        changed_when: false
        failed_when: false
        check_mode: false
        register: cis_6_2_18_group_group_check

      - name: "6.2.18 | AUDIT | Ensure no duplicate group names exist | Print warning about users with duplicate group names"
        debug:
            msg: "Warning!! The following group names are duplicates: {{ cis_6_2_18_group_group_check.stdout_lines }}"
        when: cis_6_2_18_group_group_check.stdout | length > 0

      - name: "6.2.18 | AUDIT | Ensure no duplicate group names exist | Warn count"
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: '6.2.18'
        when: cis_6_2_18_group_group_check.stdout | length > 0
  when:
      - rule_6_2_18
  tags:
      - level1-server
      - level1-workstation
      - automated
      - audit
      - accounts
      - groups
      - rule_6.2.18

- name: "6.2.19 | PATCH | Ensure all users' home directories exist"
  block:
      - name: "6.2.19 | AUDIT | Ensure all users' home directories exist"
        stat:
            path: "{{ item }}"
        register: cis_6_2_19_audit
        with_items: "{{ passwd | selectattr('uid', '>=', rheluid_interactive_uid_start | int ) | selectattr('uid', '<=', rheluid_interactive_uid_stop | int ) | map(attribute='dir') | list }}"

      - name: "6.2.19 | AUDIT | Ensure all users' home directories exist"
        command: find -H {{ item.0 | quote }} -not -type l -perm /027
        check_mode: false
        changed_when: cis_6_2_19_patch_audit.stdout | length > 0
        register: cis_6_2_19_patch_audit
        when:
            - ansible_check_mode
            - item.1.exists
        with_together:
            - "{{ cis_6_2_19_audit.results | map(attribute='item') | list }}"
            - "{{ cis_6_2_19_audit.results | map(attribute='stat') | list }}"
        loop_control:
            label: "{{ item.0 }}"

      - name: "6.2.19 | PATCH | Ensure all users' home directories exist"
        file:
            path: "{{ item.0 }}"
            recurse: true
            mode: a-st,g-w,o-rwx
        register: cis_6_2_19_patch
        when:
            - not ansible_check_mode
            - item.1.exists
        with_together:
            - "{{ cis_6_2_19_audit.results | map(attribute='item') | list }}"
            - "{{ cis_6_2_19_audit.results | map(attribute='stat') | list }}"
        loop_control:
            label: "{{ item.0 }}"

      # set default ACLs so the homedir has an effective umask of 0027
      - name: "6.2.19 | PATCH | Ensure all users' home directories exist"
        acl:
            path: "{{ item.0 }}"
            default: true
            state: present
            recursive: true
            follow: "{{ 6_2_19_follow_home_symlinks }}"
            etype: "{{ item.1.etype }}"
            permissions: "{{ item.1.mode }}"
        when:
            - not system_is_container
        with_nested:
            - "{{ (ansible_check_mode | ternary(cis_6_2_19_patch_audit, cis_6_2_19_patch)).results |
              rejectattr('skipped', 'defined') | map(attribute='item') | map('first') | list }}"
            -
                - etype: group
                  mode: rx
                - etype: other
                  mode: '0'
  when:
      - rule_6_2_19
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - users
      - rule_6.2.19