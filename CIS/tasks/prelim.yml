---
# Preliminary tasks that should always be run

# - name: Add the required packages on RHEL 8/9
#   package:
#       name:
#           - python3-libselinux
#           - python3-rpm
#       state: present
#   when: 

# - name: Add the required packages on RHEL 8/9
#   package:
#       name:
#           - python36-libselinux
#           - python36-rpm
#       state: present
#   when: 

- name: Gather the package facts before prelim
  package_facts:
      manager: auto
  tags:
      - always

# List users in order to look files inside each home directory
- name: "PRELIM | List users accounts"
  command: "awk -F: '{print $1}' /etc/passwd"
  changed_when: false
  check_mode: false
  register: users

- name: "PRELIM | Gather interactive user ID min and max"
  block:
      - name: "PRELIM | Gather interactive user ID min"
        shell: grep ^UID_MIN /etc/login.defs | awk '{print $2}'
        changed_when: false
        failed_when: false
        register: min_uid

      - name: "PRELIM | Gather interactive user ID max"
        shell: grep ^UID_MAX /etc/login.defs | awk '{print $2}'
        changed_when: false
        failed_when: false
        register: max_uid

      - name: "PRELIM | Setting the fact"
        set_fact:
            uid_interactive_uid_start: "{{ min_uid.stdout | string }}"
            uid_interactive_uid_stop: "{{ max_uid.stdout | string }}"
  when:
      - uid_info_dynamic

- name: "PRELIM | Gather accounts with empty password fields"
  shell: "cat /etc/shadow | awk -F: '($2 == \"\" ) {j++;print $1; } END {exit j}'"
  changed_when: false
  check_mode: false
  register: empty_password_accounts

- name: "PRELIM | Gather UID 0 accounts other than root"
  shell: "cat /etc/passwd | awk -F: '($3 == 0 && $1 != \"root\") {i++;print $1 } END {exit i}'"
  changed_when: false
  check_mode: false
  register: uid_zero_accounts_except_root

- name: "PRELIM | Ensure crypto-policies-scripts package is installed"
  package:
      name: crypto-policies-scripts
      state: installed

- name: "PRELIM | Gather system-wide crypto-policy"
  shell: update-crypto-policies --show
  changed_when: false
  check_mode: false
  register: system_wide_crypto_policy

- name: "PRELIM | if systemd coredump"
  stat:
      path: /etc/systemd/coredump.conf
  register: systemd_coredump
  when:
      - rule_1_6_1

- name: "PRELIM | Section 1.1 | Create list of mount points"
  set_fact:
      mount_names: "{{ ansible_mounts | map(attribute='mount') | list }}"

- name: "PRELIM | Install dconf"
  package:
      name: dconf
      state: present
  when:
      - "'gdm' in ansible_facts.packages"
      - "'dconf' not in ansible_facts.packages"
      - rule_1_8_2 or
        rule_1_8_3 or
        rule_1_8_5

- name: "PRELIM | Section 4.1 | Configure System Accounting (auditd)"
  package:
      name: audit
      state: present
  when: level_2

- name: "PRELIM | Section 5.1 | Configure cron"
  package:
      name: cronie
      state: present

- name: "PRELIM | Find all sudoers files."
  command: "find /etc/sudoers /etc/sudoers.d/ -type f ! -name '*~' ! -name '*.*'"
  changed_when: false
  failed_when: false
  check_mode: false
  register: sudoers_files
  when:
      - rule_5_3_4 or
        rule_5_3_5

- name: "PRELIM | Install authconfig"
  package:
      name: authconfig
      state: present
  when:
      - use_authconfig
      - rule_5_3_1 or
        rule_5_3_2 or
        rule_5_3_3

- name: "PRELIM | Set facts based on boot type"
  block:
      - name: "PRELIM | Check whether machine is UEFI-based"
        stat:
            path: /sys/firmware/efi
        register: efi_boot

      - name: "PRELIM | AUDIT | set legacy boot and grub path | Bios"
        set_fact:
            legacy_boot: true
            grub2_path: /etc/grub2.cfg
        when: not efi_boot.stat.exists

      - name: "PRELIM | set grub fact | UEFI"
        set_fact:
            grub2_path: /etc/grub2-efi.cfg
        when: efi_boot.stat.exists

- name: "PRELIM | AUDIT | Ensure permissions on bootloader config are configured | Get grub config file stats"
  stat:
      path: "{{ grub2_path }}"
  changed_when: false
  register: grub_cfg

# - name: debug grub stat
#   debug:
#       var: grub_cfg.stat

- name: "PRELIM | Check for rhnsd service"
  shell: "systemctl show rhnsd | grep LoadState | cut -d = -f 2"
  changed_when: false
  check_mode: false
  register: rhnsd_service_status
  when:
      - rule_1_2_2
  tags:
      - skip_ansible_lint

# Optional extra keys to extend auditd not part of CIS but can influence a system
# e.g. admin_space_left: '10%'

- name: PRELIM | Configure other keys for auditd.conf
  lineinfile:
      path: /etc/audit/auditd.conf
      regexp: "^{{ item }}( |=)"
      line: "{{ item }} = {{ auditd_extra_conf[item] }}"
  notify: restart auditd
  loop: "{{ auditd_extra_conf.keys() }}"
  when:
      - auditd_extra_conf.keys() | length > 0
      - level_2
  tags:
      - level2-server
      - level2-workstation
      - patch
      - auditd
